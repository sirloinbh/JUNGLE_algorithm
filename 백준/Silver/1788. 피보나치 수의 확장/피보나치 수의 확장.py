# MOD 상수: 나누기 연산을 위한 값
MOD = 1000000000

# 입력: 정수 N
N = int(input())

# 동적 프로그래밍을 위한 테이블 초기화
# 음수 피보나치 수를 계산하기 위해 크기를 늘려서 초기화
dp = [0] * 2000001
dp[0] = 0  # 피보나치의 0번째 값
dp[1] = 1  # 피보나치의 1번째 값

# 동적 프로그래밍 수행: 피보나치 수 계산
for i in range(2, abs(N) + 1):
    dp[i] = (dp[i-1] + dp[i-2]) % MOD  # MOD로 나머지 연산을 수행하여 큰 수를 다루기 쉽게 함

# 결과 출력
if N == 0:  # N이 0인 경우
    print(0)  # 피보나치의 부호
    print(0)  # 피보나치의 값
else:
    # N이 양수인 경우
    if N > 0:
        print(1)  # 피보나치의 부호: 양수
    else:
        # N이 음수인 경우: 피보나치의 부호가 바뀌는 규칙에 따라 출력
        if N % 2 == 0:
            print(-1)  # 짝수 번째는 음수
        else:
            print(1)   # 홀수 번째는 양수
    # 피보나치 수의 값 출력
    print(dp[abs(N)])